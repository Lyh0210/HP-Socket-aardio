//listener 监听器
namespace aaz.libhpsocket;
class listener{
    ctor(){
        ..table.gc(this, "destroy");
    }
    
	createThreadCallback = function(callback, proto){
		if(!callback) error("线程回调函数不能为空", 2);
		
		return ..thread.tostdcall( 
			function(pSocket, ...){	
				if(!__componentClass__){
					global.import(owner.componentClassPath);
					__componentClass__ = eval(owner.componentClassPath);
					
					if(owner.onThreadCreated){
						owner.onThreadCreated();
						owner.onThreadCreated = null;
					}
				}
				return owner.callback(__componentClass__(null, pSocket), ...);
			},
			proto,
			{
				componentClassPath = "aaz.libhpsocket." ++ this.componentClassPath; 
				callback = callback;
				onThreadCreated = this.onThreadCreated;
			});	
	}
}